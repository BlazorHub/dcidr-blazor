@page "/options"
@inject DcidrAppModel AppModel
@using Dcidr.Blazor.Shared


<h1>Enter your options</h1>

<p class="mb-3">
    <small>
        For example, if you were planning a family vacation,
        your options might be <strong>beach</strong> or <strong>camping</strong>.
    </small>
</p>

<ul class="decision-item-list"> 
    @foreach (var option in AppModel.Decision.Options.Items)
    {
        <DecisionItem @key="@option" Item="@option" OnDelete="@( () => AppModel.Decision.Options.Remove(option))" />
    }
</ul>

<div class="input-group mb-3 input-group-container">
    <input type="text" class="form-control" @bind="newOptionInput" @onkeyup="OnNewItemKeyup"
           placeholder="Add a criterion">
    <div class="input-group-append">
        <button class="btn btn-outline-secondary" @onclick="AddOption" type="button">Add</button>
    </div>
</div>


<div class="d-flex justify-content-between">
    <NavLink class="d-btn" href="">&lt; Home</NavLink>
    @if (AppModel.Decision.HasEnoughOptions)
    {
        <NavLink class="d-btn d-btn-primary" href="compare-options">Continue &gt;</NavLink>
    }
</div>

<DecisionDebug />


@code {
    private string newOptionInput;

    private void AddOption()
    {
        if (!string.IsNullOrWhiteSpace(newOptionInput))
        {
            AppModel.Decision.Options.Add(newOptionInput.Trim());
            newOptionInput = String.Empty;
        }
    }

     private void OnNewItemKeyup(KeyboardEventArgs args)
    {
        if(args.Key == "Enter")
        {
            AddOption();
        }
    }
}
